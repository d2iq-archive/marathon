#%RAML 1.0
title: v2 pod API
mediaType: application/json
types:
  PathId: !include types/pathId.raml
  Pod: !include types/pod.raml
  PodStatus: !include types/pod-status.raml
traits: !include ../traits.raml

/:
  post:
    is: [ secured, jsonValidator, objectValidator, objectCreator ]
    description: |
      Create and start a new pod-based service.
      TODO(jdef) would be nice to include link to deployment URI in a Location
      (or some such) header.
    body:
      application/json:
        type: Pod
    responses:
      201:
        description: Pod created successfully.
        body:
          application/json:
            type: Pod

  get:
    is: [ secured ]
    description: |
      List all the pod-based services in the system.
      TODO(jdef) do we really need this?
    responses:
      200:
        description: A list of all pods in the system.
        body:
          application/json:
            type: Pod[]

/{id}:
  uriParameters:
    id:
      type: PathId
      description: The path of the pod

  delete:
    is: [ secured, objectLocator, deployable ]
    description: |
      Delete an existing pod-based service.
      TODO(jdef) would be nice to include link to deployment URI in a Location
      (or some such) header.

  put:
    is: [ secured, jsonValidator, objectValidator, objectLocator, deployable ]
    description: |
      Update an existing pod-based service.
      TODO(jdef) separate error code when update of an immutable field fails?
      TODO(jdef) would be nice to include link to deployment URI in a Location
      (or some such) header.
    body:
      application/json:
        type: Pod

  get:
    is: [ secured, objectLocator ]
    description: |
      Get the pod at the given id
    responses:
      200:
        body:
          application/json:
            type: Pod

'/{id}::status':
  usage: |
    Implementations should probably generate do-not-cache headers because
    status should always be live.

  uriParameters:
    id:
      type: PathId
      description: The path of the pod

  get:
    is: [ secured, objectLocator ]
    description: |
      Get the status of the pod with the given id
    responses:
      200:
        body:
          application/json:
            type: PodStatus
