#%RAML 1.0 DataType
type: object
(scalaType): DockerPortMappings
additionalProperties: false
properties:
  containerPort:
    type: integer
    format: int32
    default: 0
    minimum: 0
    maximum: 65535
    description: |
      Refers to the port the application listens to inside of the
      container.
      It is optional and defaults to 0.
      For each containerPort with a value of 0 Marathon assigns the
      containerPort the same value as the assigned hostPort.
      This is especially useful for apps that advertise the port they
      are listening on to the outside world for P2P communication.
      Without containerPort: 0 they would erroneously advertise their
      private container port which is usually not the same as the
      externally visible host port.
  hostPort?:
    type: integer
    format: int32
    minimum: 0
    maximum: 65535
    description: |
      Retains the traditional meaning in Marathon, which is a random
      port from the range included in the Mesos resource offer.
      The resulting host ports for each task are exposed via the task
      details in the REST API and the Marathon web UI.
      hostPort is optional.
      In BRIDGE mode it defaults to 0 if left unspecified.
      In USER mode an unspecified hostPort does not allocate a port
      from a Mesos offer.
  labels:
    type: array
    items: !include label.raml
    description:
      This can be used to add metadata to be interpreted by external
      applications such as firewalls.
    minItems: 0
  name?:
    type: string
    description:
      Name of the service hosted on this port.
      If provided, it must be unique over all port mappings.
  protocol?:
    type: string
    (scalaType): DockerPortProtocol
    enum: [tcp, udp, "udp,tcp"]
    default: tcp
    description: |
      Protocol of the port (one of ['tcp', 'udp'] or 'udp,tcp' for
      both). Defaults to 'tcp'."
  servicePort?:
    type: integer
    format: int32
    minimum: 0
    maximum: 65535
    default: 0
    description: |
      Is a helper port intended for doing service discovery using a
      well-known port per service.
      The assigned servicePort value is not used/interpreted by
      Marathon itself but supposed to used by load balancer
      infrastructure.
      See Service Discovery Load Balancing doc page.
      The servicePort parameter is optional and defaults to 0.
      Like hostPort, If the value is 0, a random port will be assigned.
      If a servicePort value is assigned by Marathon then Marathon
      guarantees that its value is unique across the cluster.
      The values for random service ports are in the range
      [local_port_min, local_port_max] where local_port_min and
      local_port_max are command line options with default values of
      10000 and 20000, respectively.
