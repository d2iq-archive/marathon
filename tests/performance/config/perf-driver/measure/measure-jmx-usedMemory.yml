# ----------------------------------------------------------- #
# Configuration Fragment : Extract usedMemory from JMX        #
# ----------------------------------------------------------- #
# This fragment install a tracker that extracts the used      #
# memory value metric from the JMX observer                   #
# ----------------------------------------------------------- #


# Global test configuration
# ===========================
config:

  # Define the metrics we are measuring
  metrics:
    - name: usedMemory
      uuid: 124e89bd6eb142afa3406b6d489a8b7d
      desc: The ammount of used memory by marathon
      summarize:
        - class: summarize.PercentileSummarizer
          name: p50
          percentile: 50
          outliers: no
        - class: summarize.PercentileSummarizer
          name: p75
          percentile: 75
          outliers: no
        - class: summarize.PercentileSummarizer
          name: p95
          percentile: 95
          outliers: no
        - class: summarize.PercentileSummarizer
          name: p98
          percentile: 98
          outliers: no
        - class: summarize.PercentileSummarizer
          name: p99
          percentile: 99
          outliers: no
        - class: "@mean_err"
          outliers: no
        - class: "@min"
          outliers: no
        - class: "@max"
          outliers: no
      units: bytes

  # Define the indicators that can summarise our values
  indicators:

    # Calculate `meanUsedMemory` by calculating the normalizing average
    # of all the `usedMemory` mean values, normalized against each test's
    # normalization expression
    - name: meanUsedMemory
      class: indicator.NormalizedMeanMetricIndicator
      metric: usedMemory.mean_err
      normalizeto: "{{normalize_to}}"

# Tracker configuration
# ===========================
trackers:

  # Extract values from the JMX measurements
  - class: tracker.EventAttributeTracker
    event: JMXMeasurement
    extract:

      - metric: usedMemory
        attrib: "fields['usedMemory']"
